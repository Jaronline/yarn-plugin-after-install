/* eslint-disable */
//prettier-ignore
module.exports = {
name: "@yarnpkg/plugin-after-install",
factory: function (require) {
var plugin=(()=>{var w=Object.create,l=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var P=Object.getPrototypeOf,A=Object.prototype.hasOwnProperty;var b=(t,o,e)=>o in t?l(t,o,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[o]=e;var j=t=>l(t,"__esModule",{value:!0});var r=t=>{if(typeof require!="undefined")return require(t);throw new Error('Dynamic require of "'+t+'" is not supported')};var H=(t,o)=>{for(var e in o)l(t,e,{get:o[e],enumerable:!0})},v=(t,o,e)=>{if(o&&typeof o=="object"||typeof o=="function")for(let n of h(o))!A.call(t,n)&&n!=="default"&&l(t,n,{get:()=>o[n],enumerable:!(e=k(o,n))||e.enumerable});return t},a=t=>v(j(l(t!=null?w(P(t)):{},"default",t&&t.__esModule&&"default"in t?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t);var s=(t,o,e)=>(b(t,typeof o!="symbol"?o+"":o,e),e);var M={};H(M,{default:()=>D});var c=a(r("@yarnpkg/core")),u={afterInstallAlways:{description:"Hook that will always run after install",type:c.SettingsType.STRING,default:""},afterInstall:{description:"Hook that will run after install if no mode has been set",type:c.SettingsType.STRING,default:""}};var g=a(r("clipanion")),x=a(r("@yarnpkg/core"));var d=a(r("@yarnpkg/shell")),i=async(t,o,e)=>{var p;let n=t.get(e?"afterInstall":"afterInstallAlways"),I=!!((p=t.projectCwd)==null?void 0:p.endsWith(`dlx-${process.pid}`));return n&&!I?(o&&console.log("Running `afterInstall` hook..."),(0,d.execute)(n,[],t.projectCwd?{cwd:t.projectCwd}:void 0)):0};var f=class extends g.Command{async execute(){let o=await x.Configuration.find(this.context.cwd,this.context.plugins);return i(o,!1,!0)}};s(f,"paths",[["after-install"]]);var y=a(r("clipanion")),C=a(r("@yarnpkg/core"));var m=class extends y.Command{async execute(){let o=await C.Configuration.find(this.context.cwd,this.context.plugins);return i(o,!1,!1)}};s(m,"paths",[["after-install-always"]]);var T={configuration:u,commands:[f,m],hooks:{afterAllInstalled:async(t,o)=>{if(await i(t.configuration,!0,Boolean(o.mode)))throw new Error("The `afterInstall` hook failed, see output above.")}}},D=T;return M;})();
return plugin;
}
};
